events {
    worker_connections 1024;
}

http {
    upstream backend_servers {
        server backend_:80;
        server backend_alter:80;
        server backend_third:80;
    }

    server {
            listen 80; # Nginx está escuchando en el puerto 80
        server_name internal.api.tomatesoft.com;

        location / {
            proxy_pass http://backend_servers;

            # Recomendado para forward correcto
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # --- ¡INICIO DE LA CONFIGURACIÓN CORS! ---
            # Permite solicitudes desde tu frontend
            add_header Access-Control-Allow-Origin "https://tomatesoft.com";
            
            # Métodos HTTP permitidos
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH, HEAD";
            
            # Cabeceras que el cliente puede enviar
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            
            # Si tu frontend envía cookies o credenciales
            add_header Access-Control-Allow-Credentials "true";
            
            # Tiempo que el navegador puede cachear la respuesta preflight (en segundos)
            add_header Access-Control-Max-Age 3600; # O un valor más alto si lo prefieres

            # Manejo específico para las peticiones OPTIONS (preflight)
            # El navegador envía OPTIONS antes de peticiones como PUT, POST, DELETE, etc.
            # Si la petición es OPTIONS, Nginx debe responder con las cabeceras CORS
            # y terminar la petición con un 204 sin pasarla al backend.
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' "https://tomatesoft.com";
                add_header 'Access-Control-Allow-Methods' "GET, POST, PUT, DELETE, OPTIONS, PATCH, HEAD";
                add_header 'Access-Control-Allow-Headers' "Origin, X-Requested-With, Content-Type, Accept, Authorization";
                add_header 'Access-Control-Allow-Credentials' "true";
                add_header 'Access-Control-Max-Age' 3600;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204; # Devuelve una respuesta 204 No Content para preflight
            }
            # --- ¡FIN DE LA CONFIGURACIÓN CORS! ---
        }
        
    }
}
