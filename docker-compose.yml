
services:
  database:
    image: mongo:latest
    container_name: database_
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb_data:/data/db
    command: ["mongod", "--bind_ip_all", "--auth"]
    restart: on-failure
    networks:
      - tomatesoft_network 

  backend:
    image: tomatesoft_server:latest
    container_name: backend_
    build:
      context: ./server
      dockerfile: Dockerfile
    depends_on:
      - database
    networks: 
      - tomatesoft_network

  # backend_alter:
  #   image:  tomatesoft_server_alter:latest
  #   container_name: backend_alter
  #   build:
  #     context: ./server
  #     dockerfile: Dockerfile
      
  #   depends_on:
  #     - database
  #     - backend
  #   networks: 
  #     - tomatesoft_network

  # backend_third:
  #   image:  tomatesoft_server_third:latest
  #   container_name: backend_third
  #   build:
  #     context: ./server
  #     dockerfile: Dockerfile
      
  #   depends_on:
  #     - database
  #     - backend
  #   networks: 
  #     - tomatesoft_network

  frontend:
    image: tomatesoft_frontend:latest
    container_name: frontend_
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - ${CLIENT_PORTS}
    depends_on:
      - backend
      - backend_alter
    networks: 
      - tomatesoft_network

  # proxy:
  #   image: proxy:latest
  #   container_name: proxy
  #   build:
  #     context: ./proxy
  #   ports:
  #     - ${PROXY_PORTS}
  #   depends_on:
  #     - backend
  #     - backend_alter
  #     - database
  #     - frontend
  #   networks: 
  #     - tomatesoft_network

volumes:
  mongodb_data:
    driver: local


networks:
  tomatesoft_network: 
    driver: bridge 